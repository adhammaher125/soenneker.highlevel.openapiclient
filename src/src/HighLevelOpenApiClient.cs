// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using Soenneker.HighLevel.OpenApiClient.Associations;
using Soenneker.HighLevel.OpenApiClient.Blogs;
using Soenneker.HighLevel.OpenApiClient.Businesses;
using Soenneker.HighLevel.OpenApiClient.Calendars;
using Soenneker.HighLevel.OpenApiClient.Campaigns;
using Soenneker.HighLevel.OpenApiClient.Companies;
using Soenneker.HighLevel.OpenApiClient.Contacts;
using Soenneker.HighLevel.OpenApiClient.Conversations;
using Soenneker.HighLevel.OpenApiClient.Courses;
using Soenneker.HighLevel.OpenApiClient.CustomFields;
using Soenneker.HighLevel.OpenApiClient.CustomMenus;
using Soenneker.HighLevel.OpenApiClient.EmailIsv;
using Soenneker.HighLevel.OpenApiClient.Emails;
using Soenneker.HighLevel.OpenApiClient.Forms;
using Soenneker.HighLevel.OpenApiClient.Funnels;
using Soenneker.HighLevel.OpenApiClient.Invoices;
using Soenneker.HighLevel.OpenApiClient.Links;
using Soenneker.HighLevel.OpenApiClient.Locations;
using Soenneker.HighLevel.OpenApiClient.Marketplace;
using Soenneker.HighLevel.OpenApiClient.Medias;
using Soenneker.HighLevel.OpenApiClient.Oauth;
using Soenneker.HighLevel.OpenApiClient.Objects;
using Soenneker.HighLevel.OpenApiClient.Opportunities;
using Soenneker.HighLevel.OpenApiClient.Payments;
using Soenneker.HighLevel.OpenApiClient.PhoneSystem;
using Soenneker.HighLevel.OpenApiClient.Products;
using Soenneker.HighLevel.OpenApiClient.Proposals;
using Soenneker.HighLevel.OpenApiClient.SaasApi;
using Soenneker.HighLevel.OpenApiClient.Snapshots;
using Soenneker.HighLevel.OpenApiClient.SocialMediaPosting;
using Soenneker.HighLevel.OpenApiClient.Store;
using Soenneker.HighLevel.OpenApiClient.Surveys;
using Soenneker.HighLevel.OpenApiClient.Users;
using Soenneker.HighLevel.OpenApiClient.VoiceAi;
using Soenneker.HighLevel.OpenApiClient.Workflows;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.HighLevel.OpenApiClient
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class HighLevelOpenApiClient : BaseRequestBuilder
    {
        /// <summary>The associations property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Associations.AssociationsRequestBuilder Associations
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Associations.AssociationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The blogs property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Blogs.BlogsRequestBuilder Blogs
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Blogs.BlogsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The businesses property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Businesses.BusinessesRequestBuilder Businesses
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Businesses.BusinessesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The calendars property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Calendars.CalendarsRequestBuilder Calendars
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Calendars.CalendarsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The campaigns property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Campaigns.CampaignsRequestBuilder Campaigns
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Campaigns.CampaignsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The companies property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Companies.CompaniesRequestBuilder Companies
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Companies.CompaniesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The contacts property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Contacts.ContactsRequestBuilder Contacts
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Contacts.ContactsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The conversations property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Conversations.ConversationsRequestBuilder Conversations
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Conversations.ConversationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The courses property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Courses.CoursesRequestBuilder Courses
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Courses.CoursesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customFields property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.CustomFields.CustomFieldsRequestBuilder CustomFields
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.CustomFields.CustomFieldsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customMenus property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.CustomMenus.CustomMenusRequestBuilder CustomMenus
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.CustomMenus.CustomMenusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The emailIsv property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.EmailIsv.EmailIsvRequestBuilder EmailIsv
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.EmailIsv.EmailIsvRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The emails property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Emails.EmailsRequestBuilder Emails
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Emails.EmailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forms property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Forms.FormsRequestBuilder Forms
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Forms.FormsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The funnels property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Funnels.FunnelsRequestBuilder Funnels
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Funnels.FunnelsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoices property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Invoices.InvoicesRequestBuilder Invoices
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Invoices.InvoicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The links property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Links.LinksRequestBuilder Links
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Links.LinksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The locations property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Locations.LocationsRequestBuilder Locations
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Locations.LocationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The marketplace property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Marketplace.MarketplaceRequestBuilder Marketplace
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Marketplace.MarketplaceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The medias property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Medias.MediasRequestBuilder Medias
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Medias.MediasRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The oauth property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Oauth.OauthRequestBuilder Oauth
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Oauth.OauthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The objects property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Objects.ObjectsRequestBuilder Objects
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Objects.ObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The opportunities property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Opportunities.OpportunitiesRequestBuilder Opportunities
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Opportunities.OpportunitiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payments property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Payments.PaymentsRequestBuilder Payments
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Payments.PaymentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The phoneSystem property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.PhoneSystem.PhoneSystemRequestBuilder PhoneSystem
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.PhoneSystem.PhoneSystemRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Products.ProductsRequestBuilder Products
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The proposals property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Proposals.ProposalsRequestBuilder Proposals
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Proposals.ProposalsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The saasApi property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.SaasApi.SaasApiRequestBuilder SaasApi
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.SaasApi.SaasApiRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The snapshots property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Snapshots.SnapshotsRequestBuilder Snapshots
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Snapshots.SnapshotsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The socialMediaPosting property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.SocialMediaPosting.SocialMediaPostingRequestBuilder SocialMediaPosting
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.SocialMediaPosting.SocialMediaPostingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The store property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Store.StoreRequestBuilder Store
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Store.StoreRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The surveys property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Surveys.SurveysRequestBuilder Surveys
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Surveys.SurveysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Users.UsersRequestBuilder Users
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The voiceAi property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.VoiceAi.VoiceAiRequestBuilder VoiceAi
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.VoiceAi.VoiceAiRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The workflows property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Workflows.WorkflowsRequestBuilder Workflows
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Workflows.WorkflowsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.HighLevelOpenApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public HighLevelOpenApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "https://services.leadconnectorhq.com";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
#pragma warning restore CS0618
