// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Item;
using Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Pipelines;
using Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Search;
using Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Upsert;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities
{
    /// <summary>
    /// Builds and executes requests for operations under \opportunities\opportunities
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OpportunitiesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The EmptyPathSegment property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.EmptyPathSegmentRequestBuilder EmptyPathSegment
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.EmptyPathSegmentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pipelines property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Pipelines.PipelinesRequestBuilder Pipelines
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Pipelines.PipelinesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The search property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Search.SearchRequestBuilder Search
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Search.SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The upsert property</summary>
        public global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Upsert.UpsertRequestBuilder Upsert
        {
            get => new global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Upsert.UpsertRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the Soenneker.HighLevel.OpenApiClient.opportunities.opportunities.item collection</summary>
        /// <param name="position">Opportunity Id</param>
        /// <returns>A <see cref="global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Item.OpportunitiesItemRequestBuilder"/></returns>
        public global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Item.OpportunitiesItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("id", position);
                return new global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.Item.OpportunitiesItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.OpportunitiesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OpportunitiesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/opportunities/opportunities", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.HighLevel.OpenApiClient.Opportunities.Opportunities.OpportunitiesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OpportunitiesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/opportunities/opportunities", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
